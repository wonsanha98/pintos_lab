Kernel command line: -q run priority-donate-multiple2
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  261,734,400 loops/s.
Boot complete.
Executing 'priority-donate-multiple2':
(priority-donate-multiple2) begin
(priority-donate-multiple2) Main thread should have priority 34.  Actual priority: 31.
(priority-donate-multiple2) Main thread should have priority 36.  Actual priority: 31.
(priority-donate-multiple2) Main thread should have priority 36.  Actual priority: 31.
(priority-donate-multiple2) Threads b, a, c should have just finished, in that order.
(priority-donate-multiple2) Main thread should have priority 31.  Actual priority: 31.
(priority-donate-multiple2) end
Execution of 'priority-donate-multiple2' complete.
Timer: 30 ticks
Thread: 0 idle ticks, 30 kernel ticks, 0 user ticks
Console: 916 characters output
Keyboard: 0 keys pressed
Powering off.Interrupt 0x0d (#GP General Protection Exception) at rip=8004208d67
 cr2=0000000000000000 error=            6000
rax 0000000000000000 rbx 0000000000204400 rcx 000000000000002e rdx 00000000000003f9
rsp 0000008004000ed8 rbp 0000008004000f30 rsi 0000000000000003 rdi 0000000000000001
rip 0000008004208d67 r8 0000008004000ec8  r9 00000080042166d5 r10 0000000000000000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00200006
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../threads/interrupt.c:361 in intr_handler(): Unexpected interrupt
Call stack: 0x80042133ed 0x8004208967 0x8004208d19 0x8004207a7b 0x800420e05a 0x80042167a1 0x800421660c 0x80042067f3 0x800420613d.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 32 ticks
Thread: 0 idle ticks, 32 kernel ticks, 0 user ticks
Console: 1