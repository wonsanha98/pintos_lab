Kernel command line: -q -mlfqs run mlfqs-nice-2
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  260,505,600 loops/s.
Boot complete.
Executing 'mlfqs-nice-2':
(mlfqs-nice-2) begin
(mlfqs-nice-2) Starting 2 threads...
(mlfqs-nice-2) Starting threads took 0 ticks.
(mlfqs-nice-2) Sleeping 40 seconds to let threads run, please wait...
(mlfqs-nice-2) Thread 0 received 0 ticks.
(mlfqs-nice-2) Thread 1 received 0 ticks.
(mlfqs-nice-2) end
Execution of 'mlfqs-nice-2' complete.
Timer: 4033 ticksInterrupt 0x0e (#PF Page-Fault Exception) at rip=8004208d72
 cr2=0000000000000010 error=               0
rax 0000000000000000 rbx 0000000000204400 rcx 0000000000000073 rdx 00000000000003f9
rsp 0000008004000db8 rbp 0000008004000df0 rsi 0000000000000003 rdi 0000000000000001
rip 0000008004208d72 r8 0000008004000ec8  r9 00000080042166d5 r10 0000000000000000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00200006
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../threads/interrupt.c:361 in intr_handler(): Unexpected interrupt
Call stack: 0x80042133ed 0x8004208967 0x8004208d19 0x8004207a7b 0x800420e05a 0x80042167a1 0x8004216712 0x8004210939 0x80042165c1 0x80042108f0 0x800420d14d 0x800420681b 0x80042067dd 0x800420613d.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 4042 ticks
Thread: 4000 idle ticks, 42 kernel ticks, 0 user ticks
Console: 1